{% extends '::base.html.twig' %}

{% block content -%}
    <h1>Gestion des utilisateurs</h1>

    <hr/>
<style>

div.dataTables_length label {
    width: 460px;
    float: left;
    text-align: left;
}

div.dataTables_length select {
    width: 75px;
}

div.dataTables_filter label {
    float: right;
    width: 460px;
}

div.dataTables_info {
    padding-top: 8px;
}

div.dataTables_paginate {
    float: right;
    margin: 0;
}

table {
    margin: 1em 0;
    clear: both;
}

table.dataTable th:active {
    outline: none;
}</style>
    <script src="{{ asset('js/jquery.dataTables.min.js') }}"></script>
<script type="text/javascript" charset="utf-8">
            /* Default class modification */
            $.extend( $.fn.dataTableExt.oStdClasses, {
                "sSortAsc": "header headerSortDown",
                "sSortDesc": "header headerSortUp",
                "sSortable": "header"
            } );

            /* API method to get paging information */
            $.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
            {
                return {
                    "iStart":         oSettings._iDisplayStart,
                    "iEnd":           oSettings.fnDisplayEnd(),
                    "iLength":        oSettings._iDisplayLength,
                    "iTotal":         oSettings.fnRecordsTotal(),
                    "iFilteredTotal": oSettings.fnRecordsDisplay(),
                    "iPage":          Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
                    "iTotalPages":    Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
                };
            }

            /* Bootstrap style pagination control */
            $.extend( $.fn.dataTableExt.oPagination, {
                "bootstrap": {
                    "fnInit": function( oSettings, nPaging, fnDraw ) {
                        var oLang = oSettings.oLanguage.oPaginate;
                        var fnClickHandler = function ( e ) {
                            e.preventDefault();
                            if ( oSettings.oApi._fnPageChange(oSettings, e.data.action) ) {
                                fnDraw( oSettings );
                            }
                        };

                        $(nPaging).addClass('pagination').append(
                            '<ul>'+
                                '<li class="prev disabled"><a href="#">&larr; Précedent</a></li>'+
                                '<li class="next disabled"><a href="#">Suivant &rarr; </a></li>'+
                            '</ul>'
                        );
                        var els = $('a', nPaging);
                        $(els[0]).bind( 'click.DT', { action: "previous" }, fnClickHandler );
                        $(els[1]).bind( 'click.DT', { action: "next" }, fnClickHandler );
                    },

                    "fnUpdate": function ( oSettings, fnDraw ) {
                        var iListLength = 5;
                        var oPaging = oSettings.oInstance.fnPagingInfo();
                        var an = oSettings.aanFeatures.p;
                        var i, j, sClass, iStart, iEnd, iHalf=Math.floor(iListLength/2);

                        if ( oPaging.iTotalPages < iListLength) {
                            iStart = 1;
                            iEnd = oPaging.iTotalPages;
                        }
                        else if ( oPaging.iPage <= iHalf ) {
                            iStart = 1;
                            iEnd = iListLength;
                        } else if ( oPaging.iPage >= (oPaging.iTotalPages-iHalf) ) {
                            iStart = oPaging.iTotalPages - iListLength + 1;
                            iEnd = oPaging.iTotalPages;
                        } else {
                            iStart = oPaging.iPage - iHalf + 1;
                            iEnd = iStart + iListLength - 1;
                        }

                        for ( i=0, iLen=an.length ; i<iLen ; i++ ) {
                            // Remove the middle elements
                            $('li:gt(0)', an[i]).filter(':not(:last)').remove();

                            // Add the new list items and their event handlers
                            for ( j=iStart ; j<=iEnd ; j++ ) {
                                sClass = (j==oPaging.iPage+1) ? 'class="active"' : '';
                                $('<li '+sClass+'><a href="#">'+j+'</a></li>')
                                    .insertBefore( $('li:last', an[i])[0] )
                                    .bind('click', function (e) {
                                        e.preventDefault();
                                        oSettings._iDisplayStart = (parseInt($('a', this).text(),10)-1) * oPaging.iLength;
                                        fnDraw( oSettings );
                                    } );
                            }

                            // Add / remove disabled classes from the static elements
                            if ( oPaging.iPage === 0 ) {
                                $('li:first', an[i]).addClass('disabled');
                            } else {
                                $('li:first', an[i]).removeClass('disabled');
                            }

                            if ( oPaging.iPage === oPaging.iTotalPages-1 || oPaging.iTotalPages === 0 ) {
                                $('li:last', an[i]).addClass('disabled');
                            } else {
                                $('li:last', an[i]).removeClass('disabled');
                            }
                        }
                    }
                }
            } );

            /* Table initialisation */
            $(document).ready(function() {
                var oTable = $('#table').dataTable( {
                    "sDom": "<'row'<'span5'l><'span4:float'f>r>t<'row'<'span8'i><'span8'p>>",
                    "sPaginationType": "bootstrap",
                    "oLanguage": {
                        "sLengthMenu": "_MENU_ utilisateurs par page",
                         "sSearch": "Recherche sur toutes les colonnes :"
                    }
                } );

                $("tfoot input").keyup( function () {
                    /* Filter on the column (the index) of this element */
                    oTable.fnFilter( this.value, $("tfoot input").index(this) );
                } );

                 $("tfoot input").each( function (i) {
                    asInitVals[i] = this.value;
                } );
                 
                $("tfoot input").focus( function () {
                    if ( this.className == "search_init" )
                    {
                        this.className = "";
                        this.value = "";
                    }
                } );
                 
                $("tfoot input").blur( function (i) {
                    if ( this.value == "" )
                    {
                        this.className = "search_init";
                        this.value = asInitVals[$("tfoot input").index(this)];
                    }
                } );
            } );
        </script>
    <table id="table" class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Login</th>
                <th>Prénom</th>
                <th>Nom</th>

                <th>Email</th>
                <th>Description</th>
                <th>Accès</th>

                <th style="width: 105px;">Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for entity in entities %}
            <tr>
                <td>{{ entity.id }}</td>
                <td><a href="{{ path('admin_user_show', { 'id': entity.id }) }}">{{ entity.username }}</a></td>

                <td>{{ entity.firstname }}</td>
                <td>{{ entity.lastname }}</td>

                <td>{{ entity.email }}</td>
                <td><em>{{ entity.description }}</em></td>
                <td>
                    {% if "ROLE_BUREAU" in entity.roles %}
                    <strong><span style="color: #BB1111">Bureau</span></strong>
                    {% elseif "ROLE_MAJ" in entity.roles %}
                    <strong><span style="color: #44BB44">Resp. MàJ</span></strong>
                    {% elseif "ROLE_REPORTER" in entity.roles %}
                    <strong><span style="color: #4444BB">Reporter</span></strong>
                    {% else %}
                    Visiteur
                    {% endif %}
                </td>
                
                <td>
                    <a class="btn btn-small btn-info" href="{{ path('admin_user_edit_role', { 'id': entity.id }) }}">Accès</a>
                    <a class="btn btn-small btn-warning" href="{{ path('admin_user_edit', { 'id': entity.id }) }}">Editer</a>
                </td>
            </tr>
        {% endfor %}
        </tbody>
        <tfoot>
            <tr>
                <th><input type="text" name="search_login" value="" class="search_init" style="display:none;"></th>
                <th><input type="text" name="search_login" value="" class="search_init span1"></th>
                <th><input type="text" name="search_firstname" value="" class="search_init span1"></th>
                <th><input type="text" name="search_lastname" value="" class="search_init span1"></th>

                <th><input type="text" name="search_lastname" value="" class="search_init span2"></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>

            <a class="btn btn-success" href="{{ path('admin_user_new') }}">
                Créer un utilisateur
            </a>
    {% endblock %}
